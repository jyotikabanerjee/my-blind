{"version":3,"sources":["components/header/searchbar/bl-searchbar.js","components/header/topnav/bl-topnav.js","components/body/content/sections/addpostmodal/bl-add-post.js","components/header/bl-header.js","components/body/content/sections/bl-post.js","components/body/content/bl-content.js","components/body/bl-body.js","pages/main.js","App.js","reportWebVitals.js","index.js"],"names":["tokenSource","myHTTPGet","qry","a","url","cancel","axios","CancelToken","source","get","cancelToken","token","data","result","isCancel","cancelPrevQuery","BlSearchbar","useState","query","setQuery","setSearchQuery","dataList","setDataList","getSearchQueryData","queryText","console","log","className","style","value","onChange","ev","target","search","_","debounce","prevStr","placeholder","type","name","id","map","elem","index","Title","defaultProps","BlTopnav","myHTTPPost","headers","Headers","append","createdAt","Date","now","raw","JSON","stringify","requestOptions","method","body","redirect","fetch","AddPostModal","setOpenModal","topic","setTopic","title","setTitle","text","setText","role","required","onBlur","e","onClick","postObj","v4","resp","json","res","addNewPost","BlHeader","props","openModal","BlPost","post","displayDate","moment","calendar","BlContent","allData","setAllData","useEffect","ok","Error","status","posts","Object","keys","k","sort","b","getAllPosts","length","BlBody","Main","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c3420a9.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {BsSearch} from \"react-icons/all\";\nimport _ from \"lodash\";\nimport axios from \"axios\";\n\n// import PropTypes from 'prop-types';\nlet tokenSource;\n\nasync function myHTTPGet(qry) {\n    let url = `https://www.omdbapi.com/?apikey=6aeef859&s=${qry}`;\n    try {\n        if(typeof tokenSource !== typeof undefined) {\n            tokenSource.cancel('Operation canceled as a new request has come in.')\n        }\n\n        tokenSource = axios.CancelToken.source();\n\n        const { data } = await axios.get(url, {\n            cancelToken: tokenSource.token\n        });\n\n        return {result: data};\n    } catch (err) {\n        if(axios.isCancel(err)) return {cancelPrevQuery: true};\n        return [err];\n    }\n}\n\nconst BlSearchbar = () => {\n    const [query, setQuery] = useState('');\n    const [searchQuery, setSearchQuery] = useState({});\n    const [dataList, setDataList] = useState([]);\n\n\n    let onChange = (ev) => {\n        setQuery(ev.target.value);\n        const search = _.debounce(getSearchQueryData, 300);\n\n        setSearchQuery(prevStr => {\n            if(prevStr.cancel) {\n                prevStr.cancel();\n            }\n            return search;\n        });\n\n        search(ev.target.value);\n    };\n\n    async function getSearchQueryData (queryText)  {\n        const {cancelPrevQuery, result} = await myHTTPGet(queryText);\n\n        if (cancelPrevQuery) return;\n\n        if (result['Response'] === 'True') {\n            setDataList(result['Search']);\n            console.log(dataList);\n        } else {\n            setDataList([]);\n            console.log(result['Error']);\n        }\n    }\n\n    return (\n        <div className=\"inline items-start ml-4 w-full p-6 mt-4\" style={{ 'position': 'relative'}}>\n            <div style={{\n                'position':'relative',\n                'margin':'auto'\n            }}>\n                <span style={{'position': 'absolute', 'left': '55%', 'top':'3px'}}\n                      className=\"p-2 rounded-lg bg-white-500 focus:outline-none\">\n                    <BsSearch style={{'color': 'gray'}}/>\n                </span>\n                <input className=\"inline-block rounded-3xl mx-auto w-96 p-2 bg-transparent text-white-700 border border-white-1 focus:outline-none\"\n                       value={query} onChange={onChange} placeholder=\"Find a post\" type=\"text\" name=\"searchbar\" id=\"search\"/>\n            </div>\n            <ul className=\"w-80 ml-5 rounded-md\" style={{'position':'absolute', 'background-color':'#243339'}}>\n                {dataList.map((elem, index) => (\n                    <li className=\"border border-white rounded-sm\" key={index}>{elem.Title}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nBlSearchbar.propTypes = {};\nBlSearchbar.defaultProps = {};\n\nexport default BlSearchbar;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n// import { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n// import {BsSearch} from \"react-icons/all\";\nimport BlSearchbar from \"../searchbar/bl-searchbar\";\n\nconst BlTopnav = () => {\n    return (\n        <div className=\"inline ml-2 mt-4\">\n            <BlSearchbar/>\n        {/*<div className=\"inline-flex w-full p-5\">*/}\n        {/*    <Router>*/}\n        {/*        <Link className=\"p-2\" to=\"/\">Home</Link>*/}\n        {/*        <Link className=\"p-2\" to=\"/company\">Company Reviews </Link>*/}\n        {/*        <Link className=\"p-2\" to=\"/salaries\">Salaries </Link>*/}\n        {/*        <Switch>*/}\n        {/*            <Route path=\"/\">*/}\n\n        {/*            </Route>*/}\n        {/*            <Route path={`/company`}>*/}\n\n        {/*            </Route>*/}\n        {/*            <Route path={`/salaries`}>*/}\n\n        {/*            </Route>*/}\n        {/*        </Switch>*/}\n        {/*    </Router>*/}\n        {/*</div>*/}\n        </div>\n    );\n};\n\nBlTopnav.propTypes = {};\nBlTopnav.defaultProps = {};\n\nexport default BlTopnav;\n","import React, {useState} from 'react';\n// import PropTypes from 'prop-types';\nimport { BsFileEarmarkPlus } from  'react-icons/bs'\nimport { v4 } from 'uuid';\n\nasync function myHTTPPost(url, data) {\n    let headers = new Headers();\n    headers.append('Content-type', 'application/json');\n    data.createdAt = Date.now();\n    let raw = JSON.stringify(data);\n    console.log(raw);\n    let requestOptions = {\n        method: 'POST',\n        headers: headers,\n        body: raw,\n        redirect: 'follow'\n    };\n    return await fetch(url, requestOptions)\n}\n\nconst AddPostModal = ({setOpenModal}) => {\n    let [topic, setTopic] = useState('Tech');\n    let [title, setTitle] = useState('');\n    let [text, setText] = useState('');\n\n    const closeModal = () => {\n        setOpenModal(false);\n    };\n\n    const submitPost = () => {\n        setOpenModal(false);\n        // console.log(topic);\n        // console.log(title);\n        // console.log(text);\n        const url = `https://my-blind-98ebc-default-rtdb.firebaseio.com/bl-posts.json`;\n        // Make POST Request\n        let postObj= {\n            id: v4(),\n          topic,\n          title,\n          text\n        };\n\n        console.log(postObj);\n        async function addNewPost (url, postObj ) {\n            let resp = await myHTTPPost(url, postObj);\n            console.log('RESP');\n            return await resp.json();\n        }\n        let res =  addNewPost(url, postObj);\n        console.log('RES');\n        console.log(res);\n    };\n\n    const handleTitleSubmit = (ev) => {\n        console.log('Title blur');\n        // console.log(ev.target.value);\n        setTitle(ev.target.value);\n        // Text area changed;\n    };\n\n    const handleTextSubmit = (ev) => {\n        console.log('Text blur');\n        console.log(ev.target.value);\n        setText(text);\n    };\n\n    const handleSelection = (ev) => {\n        console.log('Selection');\n        console.log(ev.target.value);\n        setTopic(ev.target.value);\n    };\n\n    return (\n        <div className=\"fixed z-10 inset-0 overflow-y-auto\"  role=\"dialog\">\n            <div className=\"flex items-end justify-center h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"></div>\n\n                <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\">&#8203;</span>\n                <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n                    <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                        <div className=\"bg-black-500 sm:flex sm:items-start\">\n                            <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\n                                <BsFileEarmarkPlus />\n                            </div>\n                            <div className=\"mt-3 text-center sm:mt-0 sm:ml-4  sm:text-left\">\n                                <h3 className=\"text-lg mt-2 leading-6 font-medium text-gray-900\" id=\"modal-title\">\n                                    Write a Post\n                                </h3>\n                                <div className=\"mt-2\">\n                                    <p className=\"text-sm text-gray-500\">\n                                        <select name=\"category\" id=\"selectCat\" onChange={handleSelection} value={topic} className=\"text-sm mx-auto rounded-md w-96 p-3 border border-lightgray-600 text-gray-700\">\n                                            <option> Tech </option>\n                                            <option> S/W </option>\n                                            <option> Immigration </option>\n                                            <option> Investments </option>\n                                            <option> Misc. </option>\n                                            <option> Layoffs </option>\n                                            <option> COVID-19 </option>\n                                            <option> WFH </option>\n                                            <option> Return to office </option>\n                                            <option> IT </option>\n                                        </select>\n                                    </p>\n                                    <p className=\"text-sm text-gray-500\">\n                                        <input className=\"rounded-md  focus:outline-none mx-auto w-96 p-4 m-3 shadow-inner border border-lightgray-600 text-gray-700\"\n                                               type=\"text\"\n                                               required={true}\n                                               name=\"title\"\n                                               placeholder=\"Add a title\"\n                                               onBlur={handleTitleSubmit}\n                                        />\n                                    </p>\n                                    <p className=\"text-sm text-gray-500\">\n                                        <textarea className=\"resize-none text-gray-600 focus:outline-none border rounded-md mx-auto h-64 w-96 p-4 m-3 shadow-inner border border-lightgray-600 break-normal\"\n                                                  type=\"text\"\n                                                  required={true}\n                                                  name=\"textarea-name\"\n                                                  value={text} placeholder=\"Start writing here...\"\n                                                  onChange={e => setText(e.target.value)}>\n                                                  onBlur={handleTextSubmit}\n                                        </textarea>\n\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                        <button type=\"button\" onClick={submitPost} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                            Submit\n                        </button>\n                        <button type=\"button\" onClick={closeModal} className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\n                            Cancel\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nAddPostModal.propTypes = {};\nAddPostModal.defaultProps = {};\n\nexport default AddPostModal;\n","import React, {useState} from 'react';\n// import PropTypes from 'prop-types';\nimport BlTopnav from \"./topnav/bl-topnav\";\nimport AddPostModal from \"../body/content/sections/addpostmodal/bl-add-post\";\n// import { BsSearch } from  'react-icons/bs'\n\nfunction BlHeader(props)\n{\n    let [openModal, setOpenModal] = useState(false);\n\n    const btnClickHandler = () => {\n        console.log('Sign up btn clicked');\n    };\n\n    const addPostHandler = () => {\n        setOpenModal(true);\n        console.log('Add post btn clicked')\n    };\n\n    return (\n        <div className=\"inline-flex box-content p-4 border-2 w-screen\">\n            <div style={{'marginTop': '25px', 'padding': '0', 'width': '200px', 'fontSize': '2em',}}>\n                <span style={{'fontFamily': 'Zen Tokyo Zoo'}}>MYBLIND</span>\n            </div>\n            <div className=\"w-1/2\">\n                <BlTopnav/>\n            </div>\n            <div className=\"mt-5\">\n                <button className=\"mr-2 sm:w-auto flex-none bg-gradient-to-r from-purple-400 via-pink-500 to-red-500  text-md leading-6 font-semibold py-3 px-6 border border-transparent rounded-xl focus:ring-2 focus:ring-offset-2 focus:ring-offset-white focus:ring-gray-900 focus:outline-none transition-colors duration-200\"\n                    onClick={btnClickHandler}>Sign Up</button>\n                <button className=\"sm:w-auto flex-none bg-gradient-to-r from-purple-400 via-pink-500 to-red-500  text-md leading-6 font-semibold py-3 px-6 border border-transparent rounded-xl focus:ring-2 focus:ring-offset-2 focus:ring-offset-white focus:ring-gray-900 focus:outline-none transition-colors duration-200\"\n                   onClick={addPostHandler}>Write a Post</button>\n            </div>\n            {openModal && <AddPostModal setOpenModal={setOpenModal}/>}\n        </div>\n    );\n}\n\nBlHeader.propTypes = {};\nBlHeader.defaultProps = {};\n\nexport default BlHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nconst BlPost = ({post}) => {\n    let displayDate = moment(post.createdAt).calendar();\n    // console.log(displayDate);\n    return (\n        <div>\n            {/*<section>*/}\n            {/*    <div className=\"px-4 sm:px-6 md:px-8 mb-10 sm:mb-16 md:mb-20\">*/}\n            {/*        <p className=\"text-l sm:text-l lg:text-3xl leading-none font-bold text-white-500 tracking-tight mb-4\">*/}\n            {/*            {title}*/}\n            {/*        </p>*/}\n            {/*        <p className=\"max-w-4xl text-md sm:text-md font-light sm:leading-10 space-y-6 mb-4\">*/}\n            {/*            {text}*/}\n            {/*        </p>*/}\n            {/*    </div>*/}\n            {/*</section>*/}\n\n            <div className=\"flex flex-col md:flex-row overflow-hidden\n                                        bg-gray-400 rounded-lg shadow-xl  mt-4 w-2/3 mx-2\">\n\n            <div className=\"w-full py-4 px-6 text-gray-800 flex flex-col justify-between\">\n                <h3 className=\"font-semibold text-lg leading-tight truncate\">{post.title}</h3>\n                <p className=\"text-sm text-gray-700  tracking-wide mt-2\">\n                    Created {displayDate}\n                </p>\n                <p className=\"mt-2\">\n                    {post.text}\n                </p>\n                <p className=\"text-sm text-gray-700 tracking-wide mt-2\">\n                   topic: {post.topic}\n                </p>\n            </div>\n            </div>\n        </div>\n    );\n};\n\nBlPost.propTypes = {\n    post: PropTypes.object\n};\nBlPost.defaultProps = {\n   post: {}\n};\n\nexport default BlPost;\n","import React, {useState, useEffect} from 'react';\n// import PropTypes from 'prop-types';\nimport BlPost from \"./sections/bl-post\";\n\nasync function myHTTPGet (url) {\n    return await fetch(url);\n}\nconst BlContent = () => {\n    /**\n     * GET all posts\n     * Create one section per post\n     */\n    const [allData, setAllData] = useState([]);\n\n    useEffect(() => {\n        async function getAllPosts() {\n            let url =  'https://my-blind-98ebc-default-rtdb.firebaseio.com/bl-posts.json';\n            // let url = '/posts.json';\n            let res = await myHTTPGet(url);\n            if(!res.ok) {\n                throw new Error(`Error with GET Posts - Status ${res.status}`);\n            }\n            let data = await res.json();\n            let posts = Object.keys(data).map(k => {\n               return  data[k];\n            });\n            console.log(posts);\n            posts.sort((a,b) => {\n               return new Date(b.createdAt) - new Date(a.createdAt);\n            });\n            setAllData(posts);\n         }\n         getAllPosts();\n    }, []);\n\n\n    return (\n        <div className=\"flex-column mx-auto\">\n            {allData.length > 0 && allData.map((post) => {\n                return <BlPost key={post.id} post={post}/>\n            })}\n        </div>\n    );\n};\n\nBlContent.propTypes = {};\nBlContent.defaultProps = {};\n\nexport default BlContent;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport BlContent from \"./content/bl-content\";\n// import BlSidebar from \"./sidebar/bl-sidebar\";\n\nfunction BlBody(props)\n{\n    return (\n        <div className=\" box-content p-4 border-2 w-screen mx-auto\">\n            <BlContent/>\n        </div>\n    );\n}\n\nBlBody.propTypes = {};\nBlBody.defaultProps = {};\n\nexport default BlBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BlHeader from \"../components/header/bl-header\";\nimport BlBody from \"../components/body/bl-body\";\n\nconst Main = (props) => {\n    return (\n        <div>\n            <BlHeader/>\n            <BlBody/>\n        </div>\n    );\n};\n\nMain.propTypes = {};\nMain.defaultProps = {};\n\nexport default Main;\n","import './App.css';\nimport React from 'react';\nimport BlHeader from \"./components/header/bl-header\";\nimport BlBody from \"./components/body/bl-body\"\nimport {BrowserRouter as Router, Link, Switch, Route} from 'react-router-dom';\nimport Main from './pages/main';\n\nfunction App() {\n  return (\n      <div className=\"App flex-column\">\n        <Main/>\n        <Router>\n        {/*    <Link to='/signup'></Link>*/}\n        {/*    <Link to='/signin'></Link>*/}\n        {/*    <Link to='/'></Link>*/}\n        {/*</Router>*/}\n          <Switch>\n              <Route path=\"/signup\"></Route>\n              <Route path=\"/signin\"></Route>\n              <Route path=\"/\"></Route>\n          </Switch>\n        </Router>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n// The Cloud Functions for Firebase SDK to create Cloud Functions and setup triggers.\nimport firebase from \"firebase/app\";\n\n// The Firebase Admin SDK to access Firestore.\n// const admin = require('firebase-admin');\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDVTIl9qKcyI7BUguDh3vWSzUWpKj-1IJc\",\n    authDomain: \"my-blind-98ebc.firebaseapp.com\",\n    databaseURL: \"https://my-blind-98ebc-default-rtdb.firebaseio.com\",\n    projectId: \"my-blind-98ebc\",\n    storageBucket: \"my-blind-98ebc.appspot.com\",\n    messagingSenderId: \"72678794531\",\n    appId: \"1:72678794531:web:9ee6bd14978556a685d896\"\n};\nfirebase.initializeApp(firebaseConfig);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}